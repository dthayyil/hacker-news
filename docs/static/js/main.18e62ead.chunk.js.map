{"version":3,"sources":["NewsListItem.js","NewsHeader.js","NewsFeed.js","App.js","serviceWorker.js","index.js"],"names":["NewsListItem","props","_this","Object","classCallCheck","this","_super","call","getDomainForDisplay","domain","state","react_default","a","createElement","href","title","className","target","rel","getUpvotedNews","upvotedNews","localStorage","getItem","JSON","parse","removeVote","event","vote","objectID","newsData","index","indexOf","splice","setItem","stringify","style","visibility","setState","isVoteGiven","comments","date","author","_this$props$newsData","_this$props$newsData$","_this$props$newsData$2","points","url","created_at","_this$props$newsData$3","_this$props$newsData$4","num_comments","getDomainName","getTime","replace","split","creationTime","todayDate","Date","createdAt","seconds","Math","floor","minutes","hours","days","years","finalDate","concat","push","_this2","_this$state","voteGiven","onClick","e","addVote","hidePost","React","Component","headerItems","NewsHeader","map","item","activeTab","key","getActiveTabData","page","NewsFeed","getHiddenPost","hiddenItems","getVisibleNews","hits","filter","val","moreItemsExist","getNewsList","data","id","hiddenPost","arguments","length","undefined","tab","axios","get","then","res","isItemExists","i","_this3","Fragment","src_NewsHeader","bind","src_NewsListItem","nextNews","App","react","src_NewsFeed","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18e62ead.chunk.js","sourcesContent":["import React from \"react\";\n\nclass NewsListItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      comments: \"\",\n      vote: 0,\n      domain: \"\",\n      date: \"\",\n      author: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const {\n      author = \"\",\n      points = 0,\n      url,\n      created_at,\n      title = \"\",\n      num_comments = \"\"\n    } = this.props.newsData;\n\n    this.setState({\n      title: title,\n      comments: num_comments,\n      author: author,\n      vote: !this.isVoteGiven() ? points : points + 1,\n      domain: url ? this.getDomainName(url) : \"\",\n      date: this.getTime(created_at)\n    });\n  }\n\n  getDomainForDisplay = () => {\n    const { domain } = this.state;\n    return domain ? (\n      <a\n        href={domain}\n        title=\"Url\"\n        className=\"domain-link\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {\" (\" + domain + \")\"}\n      </a>\n    ) : null;\n  };\n\n  getDomainName(url) {\n    return url\n      .replace(\"http://\", \"\")\n      .replace(\"https://\", \"\")\n      .split(/[/?#]/)[0];\n  }\n\n  getTime(creationTime) {\n    const todayDate = new Date();\n    const createdAt = new Date(creationTime);\n\n    let seconds = Math.floor((todayDate - createdAt) / 1000);\n    let minutes = Math.floor(seconds / 60);\n    let hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const years = Math.floor(days / 365);\n\n    hours -= days * 24;\n    minutes = minutes - days * 24 * 60 - hours * 60;\n    seconds = seconds - days * 24 * 60 * 60 - hours * 60 * 60 - minutes * 60;\n    let finalDate = \"\";\n    if (years) {\n      finalDate = `${years} year`;\n    } else if (days) {\n      finalDate = `${days} days`;\n    } else if (hours) {\n      finalDate = `${hours} hours`;\n    } else if (minutes) {\n      finalDate = `${minutes} minute`;\n    }\n    return finalDate;\n  }\n\n  getUpvotedNews = () => {\n    let upvotedNews = localStorage.getItem(\"upvotedNews\");\n    return upvotedNews ? JSON.parse(upvotedNews) : [];\n  };\n\n  addVote(event) {\n    let { vote } = this.state;\n    const { objectID } = this.props.newsData;\n    let upvotedNews;\n    vote = vote + 1;\n    this.setState({\n      vote\n    });\n\n    upvotedNews = this.getUpvotedNews();\n    upvotedNews.push(objectID);\n    localStorage.setItem(\"upvotedNews\", JSON.stringify(upvotedNews));\n  }\n\n  removeVote = event => {\n    let { vote } = this.state;\n    const { objectID } = this.props.newsData;\n    let upvotedNews;\n\n    upvotedNews = this.getUpvotedNews();\n    const index = upvotedNews.indexOf(objectID);\n    if (index !== -1) {\n      upvotedNews.splice(index, 1);\n    }\n\n    localStorage.setItem(\"upvotedNews\", JSON.stringify(upvotedNews));\n    event.target.style.visibility = \"visible\";\n\n    vote = vote - 1;\n    this.setState({\n      vote\n    });\n  };\n\n  isVoteGiven = () => {\n    const { objectID } = this.props.newsData;\n    let upvotedNews = localStorage.getItem(\"upvotedNews\");\n    if (upvotedNews) {\n      upvotedNews = JSON.parse(upvotedNews);\n      return upvotedNews.indexOf(objectID) === -1 ? false : true;\n    }\n    return false;\n  };\n\n  render() {\n    const { vote, author, date, title, comments } = this.state;\n    const voteGiven = this.isVoteGiven();\n    return (\n      <li className=\"feed-news__item\">\n        <span className=\"comment\" title=\"No of comments\">\n          {comments ? comments : 0}\n        </span>\n        <span className=\"vote\" title=\"No of votes\">\n          {vote ? vote : 0}\n        </span>\n        <div className=\"item-row\">\n          {!voteGiven ? (\n            <button\n              className=\"arrow\"\n              title=\"Click to upvote\"\n              onClick={e => this.addVote(e)}\n            />\n          ) : (\n            <button className=\"hide-arrow\" />\n          )}\n          <div className=\"title\">\n            <span className=\"black-color\">{title}</span>\n            {this.getDomainForDisplay()}\n\n            <span>\n              {\" by \"}\n              <span className=\"black-color\" title=\"Author\">\n                {\" \"}\n                {author}{\" \"}\n              </span>\n              <span title=\"Age\"> {date} ago </span>\n            </span>\n\n            <span\n              className=\"hide-btn\"\n              onClick={() => this.props.hidePost(this.props)}\n            >\n              [ hide ]\n            </span>\n\n            {voteGiven ? (\n              <span className=\"unvote\" onClick={e => this.removeVote(e)}>\n                {\" \"}\n                [ unvote ]\n              </span>\n            ) : null}\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default NewsListItem;\n","import React from \"react\";\n\nconst headerItems = [\"top\", \"new\"];\n\nconst NewsHeader = props => {\n  return (\n    <header className=\"header\">\n      <ul className=\"header-list\">\n        {headerItems.map((item, index) => (\n          <li\n            className={`header-list__item \" ${\n              props.activeTab === index ? \"active\" : \"\"\n            }`}\n            key={index}\n            onClick={e => props.getActiveTabData(index, e)}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </header>\n  );\n};\n\nexport default NewsHeader;\n","import React from \"react\";\nimport axios from \"axios\";\nimport NewsListItem from \"./NewsListItem\";\nimport NewsHeader from \"./NewsHeader\";\n\nlet page = 1;\n\nclass NewsFeed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newsData: [],\n      moreItemsExist: false,\n      activeTab: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getNewsList();\n  } \n  nextNews() {\n    page += 1;\n    this.getNewsList(page, this.state.activeTab);\n  }\n\n  getHiddenPost = () => {\n    let hiddenItems = localStorage.getItem(\"hiddenItems\");\n    return hiddenItems ? JSON.parse(hiddenItems) : [];\n  };\n \n  hidePost(data) {\n    const id = data.newsData.objectID;\n    const hiddenPost = this.getHiddenPost();\n    hiddenPost.push(id);\n    localStorage.setItem(\"hiddenItems\", JSON.stringify(hiddenPost));\n\n    let newsData = this.state.newsData.filter(val => {\n      return val.objectID !== id;\n    });\n    this.setState({\n      newsData\n    });\n  } \n  getVisibleNews = hits => {\n    let hiddenItems = localStorage.getItem(\"hiddenItems\");\n    if (hiddenItems) {\n      hiddenItems = JSON.parse(hiddenItems);\n      hits = hits.filter(val => {\n        return hiddenItems.indexOf(val.objectID) === -1;\n      });\n    }\n    return hits;\n  };\n\n  isItemExists(hits) {\n    return hits ? true : false;\n  }\n\n  getNewsList(page = 1, tab = 0) {\n    let { moreItemsExist } = this.state;\n    let url;\n    if (tab === 0) {\n      url = `https://hn.algolia.com/api/v1/search?page=${page}`;\n    } else {\n      url = `https://hn.algolia.com/api/v1/search_by_date?query=recent&page=${page}`;\n    }\n    axios.get(url).then(res => {\n      let hits = res.data.hits;\n      hits = this.getVisibleNews(hits);\n      moreItemsExist = this.isItemExists(hits);\n      this.setState({\n        newsData: hits,\n        moreItemsExist,\n        activeTab: tab\n      });\n    });\n  }\n\n  getActiveTabData(i) {\n    const tab = i;\n    page = 1;\n    this.getNewsList(1, tab);\n  }\n\n  render() {\n    const { newsData, moreItemsExist, activeTab } = this.state;\n    return (\n      <React.Fragment>\n        <NewsHeader\n          activeTab={activeTab}\n          getActiveTabData={this.getActiveTabData.bind(this)}\n        />\n\n        <ul className=\"feed-news\">\n          {newsData.map(val => (\n            <NewsListItem\n              key={val.objectID}\n              hidePost={event => this.hidePost(event)}\n              newsData={val}\n            />\n          ))}\n        </ul>\n\n        {moreItemsExist ? (\n          <button className=\"more-btn\" onClick={() => this.nextNews()}>\n            More\n          </button>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NewsFeed;\n","import React, { Fragment } from \"react\";\n\nimport \"./App.css\";\nimport NewsFeed from \"./NewsFeed\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <NewsFeed />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n/* eslint-disable */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root')); \nserviceWorker.unregister();\n"],"sourceRoot":""}